security:
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto
    encoders:
        App\Entity\Admin:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppAuthenticator
            logout:
                path: logout
                # where to redirect after logout
                target: login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: '^/super_admin/', roles: [ ROLE_SUPER_ADMIN ,  IS_AUTHENTICATED_FULLY] }
        - { path: '^/admin/', roles: [ ROLE_ADMIN ,  IS_AUTHENTICATED_FULLY] }
        - { path: '^/responsable/', roles: [ ROLE_RESPONSABLE ,  IS_AUTHENTICATED_FULLY] }
        - { path: '^/gerant/', roles: [ ROLE_GERANT ,  IS_AUTHENTICATED_FULLY] }
    #    - { path: ^/profile, roles: ROLE_USER }
